{"version":3,"sources":["actions/userActions.js","constants/userConstants.js","components/Header/Header.js","components/Footer/Footer.js","components/button/Button.js","Screens/LandingPage/LandingPage.js","components/button/Buttonalt.js","components/MainScreen.js","actions/notesAction.js","constants/notesConstants.js","components/loader/Loading.js","components/alert/Error.js","Screens/MyNotes/MyNotes.js","Screens/Loginpage/Loginpage.js","Screens/Registerpage/Registerpage.js","Screens/Createnote/Createnote.js","Screens/singlenote/Singlenote.js","components/alert/Success.js","Screens/Profilepage/Profile.js","App.js","serviceWorker.js","store.js","reducers/userReducers.js","reducers/notesReducers.js","index.js"],"names":["login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","classNames","classes","filter","Boolean","join","Navbar","setSearch","React","useState","navbarOpen","setNavbarOpen","navigate","useNavigate","useDispatch","userInfo","useSelector","state","userLogin","logoutHandler","removeItem","className","to","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","placeholder","autoComplete","onChange","e","target","value","onClick","xmlns","id","as","Button","aria-hidden","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","Item","active","href","Footer","role","aria-label","props","children","LandingPage","useEffect","getItem","style","backgroundImage","MainScreen","title","deleteNoteAction","getState","Authorization","token","delete","Loading","borderTopColor","Error","MyNotes","search","noteList","loading","notes","error","successCreate","noteCreate","success","successUpdate","noteUpdate","noteDelete","loadingDelete","errorDelete","successDelete","get","filteredNote","toLowerCase","includes","reverse","map","note","key","_id","open","Panel","content","category","createdAt","substring","Buttonalt","window","confirm","Loginpage","setEmail","setPassword","submitHandler","preventDefault","onSubmit","Registerpage","setName","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","htmlFor","aria-describedby","label","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","postDetails","files","Createnote","setTitle","setContent","setCategory","resetHandler","rows","Date","toLocaleDateString","createNoteAction","Singlenote","useParams","date","setDate","updatedAt","fetching","put","updateNoteAction","deleteHandler","Success","Profile","userUpdate","display","alignItems","justifyContent","src","alt","user","App","s","path","element","exact","location","hostname","match","reducer","combineReducers","action","initialState","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1339e80a.chunk.js","sourcesContent":["import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\n//for login\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      {\n        email,\n        password,\n      },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//for registration\nexport const register = (name, email, password, pic) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, pic, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//for logout\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";","import React from \"react\";\nimport { Menu, Transition } from \"@headlessui/react\";\nimport { Fragment } from \"react\";\nimport { ChevronDownIcon } from \"@heroicons/react/solid\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/userActions\";\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport default function Navbar({ setSearch }) {\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  // eslint-disable-next-line\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    navigate(\"/\");\n  };\n\n  return (\n    <>\n      <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-4 bg-gray-600 shadow-lg  \">\n        <div className=\"container px-2 mx-auto flex flex-wrap items-center justify-between\">\n          <div className=\"w-full relative flex justify-evenly lg:w-auto lg:static lg:block  gap-2\">\n            <div className=\"flex  md:space-x-16 lg:space-x-56  \">\n              <span className=\"text-lg items-center font-bold leading-relaxed inline-block  whitespace-nowrap  text-white\">\n                <Link to=\"/\">MyDiary</Link>\n              </span>\n              <div className=\"ml-5 md:ml-0\">\n                <form>\n                  <div className=\"relative text-gray-+00 focus-within:text-gray-400\">\n                    <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n                      <button\n                        type=\"submit\"\n                        className=\"p-1 focus:outline-none focus:shadow-outline\"\n                      >\n                        <svg\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          viewBox=\"0 0 24 24\"\n                          className=\"w-6 h-6\"\n                        >\n                          <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n                        </svg>\n                      </button>\n                    </span>\n                    <input\n                      type=\"search\"\n                      name=\"q\"\n                      className=\"py-2 text-sm text-white bg-gray-700 rounded-md pl-10 focus:outline-none focus:bg-white focus:text-gray-900\"\n                      placeholder=\"Search...\"\n                      autoComplete=\"off\"\n                      onChange={(e) => setSearch(e.target.value)}\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n\n            <button\n              className=\"bg-gray-400 text-white cursor-pointer text-xl leading-none px-2 py-0 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n              type=\"button\"\n              onClick={() => setNavbarOpen(!navbarOpen)}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                className=\"h-6 w-6\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M4 6h16M4 12h16M4 18h16\"\n                />\n              </svg>\n            </button>\n          </div>\n          {userInfo ? <div\n            className={\n              \"flex justify-start lg:flex flex-grow \" +\n              (navbarOpen ? \" flex\" : \" hidden\")\n            }\n            id=\"example-navbar-danger\"\n          >\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto lg:space-x-5\">\n              <li className=\"nav-item\">\n                <Menu as=\"div\" className=\"relative inline-block text-left\">\n                  <Menu.Button className=\"inline-flex justify-center w-full  px-6 py-2 text-sm font-medium text-gray-200\">\n                    <Link to=\"/mynotes\">MyPages</Link>{\" \"}\n                  </Menu.Button>\n                </Menu>\n              </li>\n              <li className=\"nav-item\">\n                <Menu as=\"div\" className=\"relative inline-block text-left\">\n                  <div>\n                    <Menu.Button className=\"inline-flex justify-center w-full   px-6 py-2 text-sm font-medium text-gray-200\">\n                      {userInfo?.name}\n                      <ChevronDownIcon\n                        className=\"-mr-1 ml-2 h-5 w-5\"\n                        aria-hidden=\"true\"\n                      />\n                    </Menu.Button>\n                  </div>\n\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                  >\n                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                      <div className=\"py-1\">\n                        <Menu.Item>\n                          {({ active }) => (\n                            <a\n                              href=\"/profile\"\n                              className={classNames(\n                                active\n                                  ? \"bg-gray-100 text-gray-900\"\n                                  : \"text-gray-700\",\n                                \"block px-4 py-2 text-sm\"\n                              )}\n                            >\n                              My Profile\n                            </a>\n                          )}\n                        </Menu.Item>\n\n                        <Menu.Item>\n                          {({ active }) => (\n                            <button\n                              type=\"submit\"\n                              onClick={logoutHandler}\n                              className={classNames(\n                                active\n                                  ? \"bg-gray-100 text-gray-900\"\n                                  : \"text-gray-700\",\n                                \"block w-full text-left px-4 py-2 text-sm\"\n                              )}\n                            >\n                              Log out\n                            </button>\n                          )}\n                        </Menu.Item>\n                      </div>\n                    </Menu.Items>\n                  </Transition>\n                  \n                </Menu>\n              </li>\n            </ul>\n          </div> : <span className=\"text-gray-100\"> <Link to=\"/login\">Login</Link> </span> }\n        </div>\n      </nav>\n    </>\n  );\n}\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"bg-gray-600\">\n      <footer className=\"flex flex-wrap items-center justify-between p-3 m-auto\">\n        <div className=\"container mx-auto flex flex-col flex-wrap items-center justify-between\">\n          <div className=\"flex mx-auto text-white text-center\">\n            Made with<span className=\"px-2\" role=\"img\" aria-label=\"heart\">❤️ &nbsp;</span>by &nbsp; <cite> Pratt</cite>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Button = (props) => {\n  return (\n    <button\n      onClick={props.onClick}\n      className={`${props.className}  shadow-lg bg-gray-600 hover:bg-gray-500 border-b-4 border-gray-400 hover:border-gray-200 text-black text-center py-2 px-4 rounded`}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Button from \"../../components/button/Button\";\n\nconst LandingPage = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const userInfo = localStorage.getItem(\"userInfo\");\n    if (userInfo) {\n      navigate(\"/mynotes\");\n    }// eslint-disable-next-line\n  }, []);\n\n  return (\n    <div\n      className=\"flex bg-center bg-scroll items-center min-h-screen\"\n      style={{\n        backgroundImage: `url(https://images.unsplash.com/photo-1527176930608-09cb256ab504?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=fill&w=2400&q=100)`,\n      }}\n    >\n      <div className=\"container mx-auto grid place-items-center px-3 w-full my-10\">\n        <span className=\"block text-3xl lg:text-6xl\">Welcome To MyDiary</span>\n        <span className=\"block text-sm lg:text-xl \">\n          One safe place for all your thoughts\n        </span>\n        <div className=\"space-x-10 mt-5 lg:text-xl flex justify-evenly\">\n          <Link to=\"/login\">\n            <Button className=\"lg:h-16 lg:w-40 text-white\">Log in</Button>\n          </Link>\n          <Link to=\"/register\">\n            <Button className=\"text-white lg:h-16 lg:w-40  \">Sign Up</Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React from \"react\";\n\nconst Button = (props) => {\n  return (\n    <button\n      onClick={props.onClick}\n      className={`${props.className}  shadow-lg  border-b-4  text-black text-center px-2 rounded`}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst MainScreen = ({ title, children }) => {\n  return (\n    <div className=\"min-h-93p flex py-3\">\n      <div className=\"container mx-auto\">\n        <div className=\"grid grid-flow-col px-3 text-base lg:text-2xl\">\n          <div className=\"px-2\">\n            {title && (\n              <>\n                <h1 className=\"text-xl lg:text-5xl\">{title}</h1>\n                <hr />\n              </>\n            )}\n            <div className=\"mt-5\">{children}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainScreen;\n","import axios from \"axios\";\nimport {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from \"../constants/notesConstants\";\n\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/notes`, config);\n\n    dispatch({\n      type: NOTES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createNoteAction =\n  (title, content, category) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: NOTES_CREATE_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/notes/create`,\n        { title, content, category },\n        config\n      );\n\n      dispatch({\n        type: NOTES_CREATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: NOTES_CREATE_FAIL,\n        payload: message,\n      });\n    }\n  };\n\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\n\n    dispatch({\n      type: NOTES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateNoteAction =\n  (id, title, content, category) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: NOTES_UPDATE_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/notes/${id}`,\n        { title, content, category },\n        config\n      );\n\n      dispatch({\n        type: NOTES_UPDATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: NOTES_UPDATE_FAIL,\n        payload: message,\n      });\n    }\n  };\n","export const NOTES_LIST_REQUEST = \"NOTES_LIST_REQUEST\";\nexport const NOTES_LIST_SUCCESS = \"NOTES_LIST_SUCCESS\";\nexport const NOTES_LIST_FAIL = \"NOTES_LIST_FAIL\";\n\nexport const NOTES_CREATE_REQUEST = \"NOTES_CREATE_REQUEST\";\nexport const NOTES_CREATE_SUCCESS = \"NOTES_CREATE_SUCCESS\";\nexport const NOTES_CREATE_FAIL = \"NOTES_CREATE_FAIL\";\n\nexport const NOTES_UPDATE_REQUEST = \"NOTES_UPDATE_REQUEST\";\nexport const NOTES_UPDATE_SUCCESS = \"NOTES_UPDATE_SUCCESS\";\nexport const NOTES_UPDATE_FAIL = \"NOTES_UPDATE_FAIL\";\n\nexport const NOTES_DELETE_REQUEST = \"NOTES_DELETE_REQUEST\";\nexport const NOTES_DELETE_SUCCESS = \"NOTES_DELETE_SUCCESS\";\nexport const NOTES_DELETE_FAIL = \"NOTES_DELETE_FAIL\";\n","import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <div>\n      <div\n        style={{borderTopColor:\"transparent\"}}\n        className=\"w-16 h-16 border-4 border-blue-400 border-solid rounded-full animate-spin\"\n      ></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\n\nconst Error = ({children}) => {\n  return (\n    <div\n      className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\n      role=\"alert\"\n    >\n      <strong className=\"font-bold\">Holy smokes!</strong>\n      <br/>\n      <span className=\"block sm:inline\">{children}</span>\n      \n    </div>\n  );\n};\n\nexport default Error;\n","import React, { useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Button from \"../../components/button/Button\";\nimport Buttonalt from \"../../components/button/Buttonalt\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Disclosure } from \"@headlessui/react\";\nimport { ChevronUpIcon } from \"@heroicons/react/solid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listNotes, deleteNoteAction } from \"../../actions/notesAction\";\nimport Loading from \"../../components/loader/Loading\";\nimport Error from \"../../components/alert/Error\";\n\nconst MyNotes = ({ search }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const noteList = useSelector((state) => state.noteList);\n  const { loading, notes, error } = noteList;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { success: successCreate } = noteCreate;\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { success: successUpdate } = noteUpdate;\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = noteDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n\n  useEffect(() => {\n    dispatch(listNotes());\n    if (!userInfo) {\n      navigate(\"/\");\n    }\n    // eslint-disable-next-line\n  }, [\n    dispatch,\n    successCreate,\n    userInfo,\n    successDelete,\n    successCreate,\n    successUpdate,\n  ]);\n\n  return (\n    <MainScreen title={`Welcome Back ${userInfo.name} `}>\n      <Link to=\"/createnote\">\n        <Button className=\"ml-3 mb-1 w-56 text-white\">Create New Note</Button>\n      </Link>\n      {error && <Error>{error}</Error>}\n      {errorDelete && <Error>{error}</Error>}\n      {loading && <Loading />}\n      {loadingDelete && <Loading />}\n      {notes &&\n        notes\n          .filter((filteredNote) =>\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\n          )\n          .reverse()\n          .map((note) => {\n            return (\n              <div className=\"w-full p-4\" key={note._id}>\n                <div className=\"p-5 rounded-xl shadow-md bg-white\">\n                  <span className=\"text-4xl\">❝</span>\n                  <div className=\"mb-5 \">\n                    <Disclosure>\n                      {({ open }) => (\n                        <>\n                          <Disclosure.Button className=\"flex justify-between w-full px-4 py-5 text-lg font-medium text-left text-black bg-gray-100 rounded-lg hover:bg-gray-200 focus:outline-none focus-visible:ring focus-visible:ring-purple-500 focus-visible:ring-opacity-75 shadow-lg\">\n                            <span className=\"block\">{note.title}</span>\n                            <ChevronUpIcon\n                              className={`${\n                                open ? \"transform rotate-180\" : \"\"\n                              } w-5 h-5 text-black`}\n                            />\n                          </Disclosure.Button>\n                          <Disclosure.Panel className=\"px-4 pt-4 pb-2 text-sm text-gray-700\">\n                            <p className=\"text-base\">{note.content}</p>\n                          </Disclosure.Panel>\n                        </>\n                      )}\n                    </Disclosure>\n                  </div>\n\n                  <span className=\"bg-yellow-500 text-yellow-50  py-1 px-2 rounded text-xs font-bold ml-1\">\n                    {note.category}\n                  </span>\n                  <hr className=\"my-4 \" />\n\n                  <div className=\"flex flex-wrap items-center\">\n                    <div className=\" flex space-x-20  lg:flex-grow lg:w-full justify-between\">\n                      <cite>\n                        <p className=\"my-auto text-xs items-center  lg:text-xl text-gray-500\">\n                          Created on {note.createdAt.substring(0, 10)}\n                        </p>\n                      </cite>\n\n                      <div className=\" flex space-x-5\">\n                        <a href={`/note/${note._id}`}>\n                          <Buttonalt className=\"items-center w-10 h-10  rounded-xl text-sm bg-green-600 hover:bg-green-300\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              className=\"h-6 w-6\"\n                              viewBox=\"0 0 24 24\"\n                            >\n                              <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M11 5H6a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2v-5m-1.414-9.414a2 2 0 1 1 2.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                              />\n                            </svg>\n                          </Buttonalt>\n                        </a>\n\n                        <Buttonalt\n                          onClick={() => deleteHandler(note._id)}\n                          className=\"items-center w-10 h-10 rounded-xl text-sm bg-red-600 hover-bg-red-300\"\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            className=\"h-6 w-6\"\n                            viewBox=\"0 0 24 24\"\n                          >\n                            <path\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              strokeWidth=\"2\"\n                              d=\"m19 7-.867 12.142A2 2 0 0 1 16.138 21H7.862a2 2 0 0 1-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v3M4 7h16\"\n                            />\n                          </svg>\n                        </Buttonalt>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n    </MainScreen>\n  );\n};\n\nexport default MyNotes;\n","// eslint-disable-next-line\nimport React, { useState, useEffect } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Buttonalt from \"../../components/button/Buttonalt\";\nimport Loading from \"../../components/loader/Loading\";\nimport Error from \"../../components/alert/Error\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../actions/userActions\";\n\nconst Loginpage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n  const navigate =useNavigate();\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n  // eslint-disable-next-line\n  useEffect(() => {\n    // eslint-disable-next-line\n    if(userInfo){\n      navigate('/mynotes');\n    }\n    // eslint-disable-next-line\n  }, [userInfo]);\n  \n\n  return (\n    <MainScreen title=\"Login\">\n      <div className=\"border p-10 my-5 rounded\">\n        {loading && <Loading />}\n        {error && <Error>{error}</Error>}\n        <form onSubmit={submitHandler}>\n          <div>\n            <label className=\"block mb-2\">E-mail</label>\n            <input\n              type=\"text\"\n              value={email}\n              placeholder=\"Enter Email\"\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          <div className=\"py-2\">\n            <label className=\"block mb-2\">Password</label>\n            <input\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          <div className=\"py-2\">\n            <button\n              type=\"submit\"\n              className=\"w-full rounded bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 border-solid border-2 border-green-600\"\n            >\n              Login\n            </button>\n          </div>\n        </form>\n      </div>\n      New user?{\" \"}\n      <Buttonalt className=\"bg-green-500 hover:bg-green-700 rounded-lg mx-2\">\n        <Link to=\"/register\">Register</Link>{\" \"}\n      </Buttonalt>\n      here\n    </MainScreen>\n  );\n};\n\nexport default Loginpage;\n","// eslint-disable-next-line\nimport React, { useState, useEffect } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport Loading from \"../../components/loader/Loading\";\nimport Error from \"../../components/alert/Error\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from \"../../actions/userActions\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Registerpage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (password !== confirmpassword) {\n      setMessage(\"Passwords do not match\");\n    } else dispatch(register(name, email, password, pic));\n  };\n  const postDetails = (pics) => {\n    // console.log(\"abc\", pics);\n    if (!pics) {\n      return setPicMessage(\"select am Image\");\n    }\n    setPicMessage(null);\n\n    if (\n      pics.type === \"image/jpg\" ||\n      pics.type === \"image/jpeg\" ||\n      pics.type === \"image/png\"\n    ) {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"merndairy\");\n      data.append(\"cloudname\", \"pranikz\");\n      fetch(\"https://api.cloudinary.com/v1_1/pranikz/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          // console.log(data);\n          setPic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please select an Image\");\n    }\n  };\n   // eslint-disable-next-line\n   useEffect(() => {\n    // eslint-disable-next-line\n    if (userInfo) {\n      navigate(\"/mynotes\");\n    }\n    // eslint-disable-next-line\n  }, [userInfo]);\n\n  return (\n    <MainScreen title=\"Register\">\n      {loading && <Loading />}\n      {error && <Error>{error}</Error>}\n      {message && <Error>{message}</Error>}\n      <div className=\"border p-10 rounded my-5\">\n        <form onSubmit={submitHandler}>\n          <div className=\"py-2\">\n            <label className=\"block mb-2\">Name</label>\n            <input\n              type=\"text\"\n              value={name}\n              placeholder=\"Enter Name\"\n              onChange={(e) => setName(e.target.value)}\n              className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          <div className=\"py-2\">\n            <label className=\"block mb-2\">E-mail</label>\n            <input\n              type=\"text\"\n              value={email}\n              placeholder=\"Enter Email\"\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          <div className=\"py-2\">\n            <label className=\"block mb-2\">Password</label>\n            <input\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          <div className=\"py-2\">\n            <label className=\"block mb-2\">Password</label>\n            <input\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmpassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          {picMessage && <Error>{picMessage}</Error>}\n          <div className=\"py-2\">\n            <label\n              className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n              htmlFor=\"user_avatar\"\n            >\n              Upload Image\n            </label>\n            <input\n              className=\"block w-full  text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\"\n              aria-describedby=\"user_avatar_help\"\n              label=\"Select a image file\"\n              id=\"user_avatar\"\n              type=\"file\"\n              onChange={(e) => postDetails(e.target.files[0])}\n            />\n            <div\n              className=\"mt-1 text-sm text-gray-500 dark:text-gray-300\"\n              id=\"user_avatar_help\"\n            >\n              A profile picture is useful to confirm your are logged into your\n              account\n            </div>\n          </div>\n          <div className=\"py-2\">\n            <button\n              type=\"submit\"\n              className=\"w-full rounded bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 border-solid border-2 border-green-600\"\n            >\n              Register\n            </button>\n          </div>\n        </form>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default Registerpage;\n","import React, { useState, useEffect } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createNoteAction } from \"../../actions/notesAction\";\nimport Loading from \"../../components/loader/Loading\";\nimport Error from \"../../components/alert/Error\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Createnote = () => {\n  const navigate = useNavigate();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { loading, error, note } = noteCreate;\n  console.log(note);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createNoteAction(title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    navigate(\"/mynotes\");\n  };\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Create a Note\">\n      <div className=\"border p-5 rounded my-1\">\n        <div className=\"bg-gray-200 font-semibold text-lg lg:text-4xl p-4 rounded-xl\">\n          <h1>Create a new note</h1>\n        </div>\n\n        <form>\n          {error && <Error >{error}</Error>}\n          <div className=\"py-2 px-2\">\n            <label className=\"block mb-2 \">Title </label>\n            <input\n              type=\"text\"\n              value={title}\n              placeholder=\"Enter the title\"\n              onChange={(e) => setTitle(e.target.value)}\n              className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          <div className=\"py-2 px-2\">\n            <label className=\"block mb-2 \">Content</label>\n            <textarea\n              rows=\"3\"\n              className=\"border p-2 w-full rounded-md\"\n              placeholder=\"Write something...\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            ></textarea>\n            <div className=\"py-2 px-2\">\n              <label className=\"block mb-2 \">Preview</label>\n              <div className=\"border rounded py-2 px-3 w-full h-auto focus:outline-none focus:shadow-outline\">\n                <ReactMarkdown>{content}</ReactMarkdown>\n              </div>\n            </div>\n          </div>\n          <div className=\"py-2 px-2\">\n            <label className=\"block mb-2 \">Category</label>\n            <input\n              type=\"text\"\n              value={category}\n              placeholder=\"Enter the category\"\n              onChange={(e) => setCategory(e.target.value)}\n              className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          <cite className=\"text-gray-500 p-2\">\n            Creating on: {new Date().toLocaleDateString()}{\" \"}\n          </cite>\n\n          {loading && <Loading />}\n        </form>\n        <div className=\"py-2 space-x-10 xl:space-x-20 flex justify-center mt-10\">\n          <button\n            onClick={submitHandler}\n            className=\"w-2/4 xl:w-1/3 rounded bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 border-solid border-2 border-green-600\"\n          >\n            Create\n          </button>\n          <button\n            type=\"submit\"\n            onClick={resetHandler}\n            className=\" w-2/4 xl:w-1/3 rounded bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 border-solid border-2 border-red-600\"\n          >\n            Reset\n          </button>\n        </div>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default Createnote;\n","import React, { useState, useEffect } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesAction\";\nimport Loading from \"../../components/loader/Loading\";\nimport Error from \"../../components/alert/Error\";\nimport ReactMarkdown from \"react-markdown\";\nimport axios from \"axios\";\n\nconst Singlenote = () => {\n  const navigate = useNavigate();\n  const {id} = useParams();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { loading, error } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n    navigate(\"/mynotes\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/notes/${id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateNoteAction(id, title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    navigate(\"/mynotes\");\n  };\n\n  return (\n    <MainScreen title=\"Create a Note\">\n      <div className=\"border p-5 rounded my-1\">\n        <div className=\"bg-gray-200 font-semibold text-lg lg:text-4xl p-4 rounded-xl\">\n          <h1>Edit your note</h1>\n        </div>\n\n        <form>\n          {loadingDelete && <Loading />}\n          {error && <Error>{error}</Error>}\n          {errorDelete && <Error>{error}</Error>}\n\n          <div className=\"py-2 px-2\">\n            <label className=\"block mb-2 \">Title </label>\n            <input\n              type=\"text\"\n              value={title}\n              placeholder=\"Enter the title\"\n              onChange={(e) => setTitle(e.target.value)}\n              className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          <div className=\"py-2 px-2\">\n            <label className=\"block mb-2 \">Content</label>\n            <textarea\n              rows=\"3\"\n              className=\"border p-2 w-full rounded-md\"\n              placeholder=\"Write something...\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            ></textarea>\n            <div className=\"py-2 px-2\">\n              <label className=\"block mb-2 \">Preview</label>\n              <div className=\"border rounded py-2 px-3 w-full h-auto focus:outline-none focus:shadow-outline\">\n                <ReactMarkdown>{content}</ReactMarkdown>\n              </div>\n            </div>\n          </div>\n          <div className=\"py-2 px-2\">\n            <label className=\"block mb-2 \">Category</label>\n            <input\n              type=\"text\"\n              value={category}\n              placeholder=\"Enter the category\"\n              onChange={(e) => setCategory(e.target.value)}\n              className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          <cite className=\"text-gray-500 p-2\">\n            Updated on - {date.substring(0, 10)}\n          </cite>\n\n          {loading && <Loading />}\n        </form>\n        <div className=\"py-2 space-x-10 xl:space-x-20 flex justify-center mt-10\">\n          <button\n            onClick={updateHandler}\n            className=\"w-2/4 xl:w-1/3 rounded bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 border-solid border-2 border-green-600\"\n          >\n            Update Note\n          </button>\n          <button\n            type=\"submit\"\n            onClick={() => deleteHandler(id)}\n            className=\" w-2/4 xl:w-1/3 rounded bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 border-solid border-2 border-red-600\"\n          >\n            Delete Note\n          </button>\n        </div>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default Singlenote;\n","import React from \"react\";\n\nconst Success = ({ children }) => {\n  return (\n    <div\n      className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative\"\n      role=\"alert\"\n    >\n      <strong className=\"font-bold\">YAY!! </strong>\n      <br />\n      <span className=\"block sm:inline\">{children}</span>\n    </div>\n  );\n};\n\nexport default Success;\n","import React, { useState, useEffect } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../../components/loader/Loading\";\nimport Error from \"../../components/alert/Error\";\nimport { useNavigate } from \"react-router-dom\";\nimport Success from \"../../components/alert/Success\";\n\nconst Profile = () => {\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      navigate(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [navigate, userInfo]);\n\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"merndairy\");\n      data.append(\"cloud_name\", \"pranikz\");\n      fetch(\"https://api.cloudinary.com/v1_1/pranikz/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateProfile({ name, email, password, pic }));\n  };\n\n  return (\n    <MainScreen title={\"Edit Profile\"}>\n      <div>\n        <div className=\"xl:flex flex-row \">\n          <div className=\"item xl:w-1/2 xl:h-96 p-2\">\n            <form>\n              {loading && <Loading />}\n              {success && <Success>Updated Successfully</Success>}\n              {error && <Error>{error}</Error>}\n              <div className=\"py-2\">\n                <label className=\"block mb-2\">Name</label>\n                <input\n                  type=\"text\"\n                  value={name}\n                  placeholder=\"Enter Name\"\n                  onChange={(e) => setName(e.target.value)}\n                  className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n                />\n              </div>\n              <div className=\"py-2\">\n                <label className=\"block mb-2\">E-mail</label>\n                <input\n                  type=\"text\"\n                  value={email}\n                  placeholder=\"Enter Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n                />\n              </div>\n              <div className=\"py-2\">\n                <label className=\"block mb-2\">Password</label>\n                <input\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n                />\n              </div>\n              <div className=\"py-2\">\n                <label className=\"block mb-2\">Password</label>\n                <input\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmpassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  className=\"border rounded py-2 px-3 w-full focus:outline-none focus:shadow-outline\"\n                />\n              </div>\n              {picMessage && <Error>{picMessage}</Error>}\n              <div className=\"py-4\">\n                <label\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n                  htmlFor=\"user_avatar\"\n                >\n                  Upload Image\n                </label>\n                <input\n                  className=\"block w-full  text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\"\n                  aria-describedby=\"user_avatar_help\"\n                  label=\"Select a image file\"\n                  id=\"user_avatar\"\n                  type=\"file\"\n                  onChange={(e) => postDetails(e.target.files[0])}\n                />\n              </div>\n            </form>\n          </div>\n          <div\n            className=\"item xl:w-1/2 xl:h-full p-2 border-black border-2 rounded\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              \n            }}\n          >\n            <img src={pic} alt={name} className=\"profilePic w-full h-full\" />\n          </div>\n        </div>\n        <div className=\"py-2 flex  xl:flex-none justify-center xl:justify-start\">\n          <button\n            type=\"submit\"\n            onClick={submitHandler}\n            className=\"w-2/3 xl:w-1/5 rounded bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 border-solid border-2 border-green-600\"\n          >\n            Update\n          </button>\n        </div>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport LandingPage from \"./Screens/LandingPage/LandingPage\";\nimport MyNotes from \"./Screens/MyNotes/MyNotes\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Loginpage from \"./Screens/Loginpage/Loginpage\";\nimport Registerpage from \"./Screens/Registerpage/Registerpage\";\nimport Createnote from \"./Screens/Createnote/Createnote\";\nimport Singlenote from \"./Screens/singlenote/Singlenote\";\nimport { useState } from \"react\";\nimport Profile from \"./Screens/Profilepage/Profile\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <div className=\"font-roboto \">\n      <BrowserRouter>\n        <Header setSearch={(s) => setSearch(s)} />\n        <main className=\"min-h-screen\">\n          <Routes>\n            <Route path=\"/\" element={<LandingPage />} exact />\n          </Routes>\n          <Routes>\n            <Route path=\"/mynotes\" element={<MyNotes search={search} />} />\n          </Routes>\n          <Routes>\n            <Route path=\"/login\" element={<Loginpage />} />\n          </Routes>\n          <Routes>\n            <Route path=\"/register\" element={<Registerpage />} />\n          </Routes>\n          <Routes>\n            <Route path=\"/createnote\" element={<Createnote />} />\n          </Routes>\n          <Routes>\n            <Route path=\"/note/:id\" element={<Singlenote />} exact />\n          </Routes>\n          <Routes>\n            <Route path=\"/profile\" element={<Profile />} exact />\n          </Routes>\n        </main>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { noteCreateReducer, noteDeleteReducer, noteListReducer, noteUpdateReducer } from \"./reducers/notesReducers\";\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteList: noteListReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n  userUpdate: userUpdateReducer,\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: true, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n      case USER_REGISTER_REQUEST:\n        return { loading: true };\n      case USER_REGISTER_SUCCESS:\n        return { loading: true, userInfo: action.payload };\n      case USER_REGISTER_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  \n","import {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from \"../constants/notesConstants\";\n\nexport const noteListReducer = (state = { notes: [] }, action) => {\n  switch (action.type) {\n    case NOTES_LIST_REQUEST:\n      return { loading: true };\n    case NOTES_LIST_SUCCESS:\n      return { loading: false, notes: action.payload };\n    case NOTES_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_CREATE_REQUEST:\n      return { loading: true };\n    case NOTES_CREATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\nexport const noteDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_DELETE_REQUEST:\n      return { loading: true };\n    case NOTES_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_UPDATE_REQUEST:\n      return { loading: true };\n    case NOTES_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}